{
    "project_name":optional string,
    "working_folder":required string,
    "src_folder":optional string default=current folder,
    "noarch": optional bool default false,
    "project_binary": required string,
    "binary_folder_override": optional string,
    "project_ext": optional string default=platform extension,
    "compiler_all": optional string enum "clang" "gcc" default="gcc",
    "compiler_c_cpp": optional string enum "clang" "gcc" default="gcc",
    "compiler_c": optional string enum "clang" "gcc" default="gcc",
    "compiler_cpp": optional string enum "clang" "gcc" default="gcc",
    "compiler_asm": optional string enum "clang" "gcc" "as" "nasm" default="gcc",
    "linker": required string enum "clang" "gcc" "ld" "ld.gold" "ld.lld" "ar" "llvm-ar" default="gcc",
    
    "compiler_binary_override_c": optional string,
    "compiler_binary_override_cpp": optional string,
    "compiler_binary_override_c_cpp": optional string,
    "compiler_binary_override_asm": optional string,
    "compiler_binary_override_all": optional string,
    
    "linker_binary_override_c": optional string,
    "linker_binary_override_cpp": optional string,
    "linker_binary_override_c_cpp": optional string,
    "linker_binary_override_other": optional string,
    "linker_binary_override_all": optional string,
    
    "targets_default": optional string | array [ string ] default="all",
    "targets": required object {
        string: required object {
            "sources": required  array [
                string | object {
                    "name": required string,
                    "type": optional string enum "exclude" "blacklist" "include" "whitelist" "include_folders_exclude_files" "exclude_files_include_folders" "folder_whitelist_file_blacklist" "file_blacklist_folder_whitelist",
                    "exclude_list" or "blacklist": if type is "exclude" or "blacklist" or "include_folders_exclude_files" or "exclude_files_include_folders" or "file_blacklist_folder_whitelist" or "folder_whitelist_file_blacklist"  optional array [ string ],
                    "include_list" or "whitelist": if type is "include" or "whitelist" or "include_folders_exclude_files" or "exclude_files_include_folders" or "folder_whitelist_file_blacklist" or "file_blacklist_folder_whitelist" optional array [ string | object self ],
                }
            ],
            "includes": optional array [
                string | object {
                    "type": required string enum "switch",
                    "condition": if type is "switch" required string enum "platform",
                    "cases": if type is "switch" required object {
                        "[case]": string,
                    }
                }
            ],
            "defines_all": optional array [ string ],
            "defines_c_cpp": optional array [ string ],
            "defines_c": optional array [ string ],
            "defines_cpp": optional array [ string ],
            "defines_asm": optional array [ string ],
            "flags_all": optional array [ string ],
            "flags_c_cpp": optional array [ string ],
            "flags_c": optional array [ string ],
            "flags_cpp": optional array [ string ],
            "flags_asm": optional array [ string ],
            "linker_flags": optional array [ string ],
            "linker_libs": optional array [ string ],
            "linker_order": optional array [ object {
                "name": required string,
                "weight": required integer,
                "type": optional enum "normal" "extra" "full_path" default="normal",
            } ],
            "binary_folder_override": optional string,
            "project_binary_override": optional string,
            "target_folder_override": optional string,
            
            "compiler_driver_override_c": optional enum same as "compiler_c",
            "compiler_driver_override_cpp": optional enum same as "compiler_cpp",
            "compiler_driver_override_c_cpp": optional enum same as "compiler_c_cpp",
            "compiler_driver_override_asm": optional enum same as "compiler_asm",
            "compiler_driver_override_all": optional enum same as "compiler_all",
            
            "linker_driver_override": optional enum same as "linker",
            
            "compiler_binary_override_c": optional string,
            "compiler_binary_override_cpp": optional string,
            "compiler_binary_override_c_cpp": optional string,
            "compiler_binary_override_asm": optional string,
            "compiler_binary_override_all": optional string,
            
            "linker_binary_override_c": optional string,
            "linker_binary_override_cpp": optional string,
            "linker_binary_override_c_cpp": optional string,
            "linker_binary_override_other": optional string,
            "linker_binary_override_all": optional string,
            
            "include_only": optional bool default=false,
        }
    },
}